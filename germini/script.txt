// ==========================
// Menu mobile
// ==========================
const toggle = document.querySelector('.menu-toggle');
const header = document.querySelector('.site-header');

toggle?.addEventListener('click', () => {
  const isOpen = header.classList.toggle('menu-open');
  toggle.setAttribute('aria-expanded', String(isOpen));
});

// Fechar menu ao clicar em um link (mobile)
document.querySelectorAll('#primary-nav a').forEach(a => {
  a.addEventListener('click', () => {
    header.classList.remove('menu-open');
    toggle?.setAttribute('aria-expanded', 'false');
  });
});

// CTA "Compre Agora" -> rolar at√© novidades
document.getElementById('cta-comprar')?.addEventListener('click', (e) => {
  e.preventDefault();
  document.getElementById('novidades')?.scrollIntoView({ behavior: 'smooth', block: 'start' });
});

// ==========================
// Carrinho (LocalStorage)
// ==========================
function loadCart() {
  return JSON.parse(localStorage.getItem('cart')) || [];
}

function saveCart(cart) {
  localStorage.setItem('cart', JSON.stringify(cart));
}

function addToCart(product) {
  let cart = loadCart();
  const existing = cart.find(p => p.id === product.id);
  if (existing) {
    existing.qty += 1;
  } else {
    cart.push({ ...product, qty: 1 });
  }
  saveCart(cart);
  updateFloatingCart(); // Atualiza o carrinho flutuante
  alert(`${product.name} adicionado ao carrinho.`);
}

// Remover item do carrinho (remove sem confirma√ß√£o)
function removeFromCart(id) {
  let cart = loadCart().filter(p => p.id !== id);
  saveCart(cart);
  // Atualiza todas as views ap√≥s remo√ß√£o
  updateFloatingCart();
  renderCart();        // atualiza p√°gina do carrinho se presente
  renderCartModal();   // atualiza modal do carrinho se aberto
}

// Novo: controle de confirma√ß√£o antes de remover
let pendingRemoveId = null;

function requestRemove(id) {
  pendingRemoveId = id;
  const cart = loadCart();
  const item = cart.find(p => p.id === id);
  const msgEl = document.getElementById('remove-confirm-message');
  if (msgEl) {
    msgEl.textContent = item ? `Deseja remover "${item.name}" do carrinho?` : 'Deseja remover este item do carrinho?';
  }
  document.getElementById('remove-confirm-modal')?.classList.remove('hidden');
}

function confirmRemove() {
  if (!pendingRemoveId) return;
  removeFromCart(pendingRemoveId);
  pendingRemoveId = null;
  document.getElementById('remove-confirm-modal')?.classList.add('hidden');
}

function cancelRemove() {
  pendingRemoveId = null;
  document.getElementById('remove-confirm-modal')?.classList.add('hidden');
}

// Exibir carrinho em qualquer p√°gina que tenha container
function renderCart(containerId = "cart-items", subtotalId = "subtotal") {
  const cart = loadCart();
  const container = document.getElementById(containerId);
  const subtotalEl = document.getElementById(subtotalId);
  if (!container || !subtotalEl) return;

  let subtotal = 0;
  container.innerHTML = "";

  if (cart.length === 0) {
    container.innerHTML = "<p>Seu carrinho est√° vazio.</p>";
  } else {
    cart.forEach(item => {
      subtotal += item.price * item.qty;
      container.innerHTML += `
        <div class="cart-item">
          <img src="${item.thumb || 'https://via.placeholder.com/80'}" alt="${item.name}">
          <div class="cart-item-info">
            <strong>${item.name}</strong><br>
            R$ ${item.price.toFixed(2)}
          </div>
          <div class="cart-item-actions">
            <button class="qty-btn" onclick="changeQty('${item.id}', -1)">-</button>
            <span>${item.qty}</span>
            <button class="qty-btn" onclick="changeQty('${item.id}', 1)">+</button>
            <a href="#" onclick="event.preventDefault(); requestRemove('${item.id}')">Remover</a>
          </div>
          <div><strong>R$ ${(item.price * item.qty).toFixed(2)}</strong></div>
        </div>
      `;
    });
  }

  subtotalEl.textContent = subtotal.toFixed(2);
}

// ==========================
// Checkout via WhatsApp
// ==========================
function sendWhatsAppOrder(numero = "5588999999999") {
  const cart = loadCart();
  if (cart.length === 0) {
    alert("Carrinho vazio!");
    return;
  }

  let message = "üõçÔ∏è Pedido:\n\n";
  let total = 0;
  cart.forEach(item => {
    message += `‚Ä¢ ${item.name} (${item.qty}x) - R$ ${(item.price * item.qty).toFixed(2)}\n`;
    total += item.price * item.qty;
  });
  message += `\nüí∞ Total: R$ ${total.toFixed(2)}`;

  const url = `https://wa.me/${numero}?text=${encodeURIComponent(message)}`;
  window.open(url, "_blank");
}

// ==========================
// Bind bot√µes "Compre Agora"
// ==========================

document.querySelectorAll('.btn-add-cart').forEach(btn => {
  btn.addEventListener('click', () => {
    try {
      const data = JSON.parse(btn.dataset.product);
      addToCart(data);
    } catch (err) {
      console.error('Produto inv√°lido no data-product', err);
    }
  });
});

// ==========================
// Carrinho Flutuante
// ==========================
function updateFloatingCart() {
  const cart = loadCart();
  const countEl = document.getElementById('cart-count');
  const dropdown = document.getElementById('cart-dropdown-items');
  if (!countEl || !dropdown) return;

  // Atualiza contagem
  let totalQty = cart.reduce((sum, item) => sum + item.qty, 0);
  countEl.textContent = totalQty;

  // Renderiza lista dropdown
  dropdown.innerHTML = "";
  if (cart.length === 0) {
    dropdown.innerHTML = "<p>Seu carrinho est√° vazio.</p>";
    return;
  }
  cart.forEach(item => {
    dropdown.innerHTML += `
      <div class="cart-dropdown-item">
        <img src="${item.thumb || 'https://via.placeholder.com/50'}" alt="${item.name}">
        <div>
          <strong>${item.name}</strong><br>
          ${item.qty}x R$ ${item.price.toFixed(2)}
        </div>
      </div>
    `;
  });
}

// Atualiza carrinho flutuante ao carregar
document.addEventListener("DOMContentLoaded", () => {
  updateFloatingCart();

  // Registra listeners do modal de confirma√ß√£o, se os elementos existirem
  document.getElementById('remove-confirm-btn')?.addEventListener('click', confirmRemove);
  document.getElementById('cancel-remove-btn')?.addEventListener('click', cancelRemove);

  // Fechar modal clicando fora (opcional)
  document.getElementById('remove-confirm-modal')?.addEventListener('click', (e) => {
    if (e.target.id === 'remove-confirm-modal') {
      cancelRemove();
    }
  });
});

// ==========================
// Modal do Carrinho
// ==========================
function renderCartModal() {
  const cart = loadCart();
  const container = document.getElementById('cart-modal-items');
  const totalEl = document.getElementById('cart-modal-total');
  if (!container || !totalEl) return;

  let total = 0;
  container.innerHTML = "";
  if (cart.length === 0) {
    container.innerHTML = "<p>Seu carrinho est√° vazio.</p>";
  } else {
    cart.forEach(item => {
      total += item.price * item.qty;
      container.innerHTML += `
        <div class="cart-item-preview">
          <img src="${item.thumb || 'https://via.placeholder.com/50'}" alt="${item.name}">
          <div>
            <strong>${item.name}</strong><br>
            ${item.qty}x R$ ${item.price.toFixed(2)}
          </div>
        </div>
      `;
    });
  }
  totalEl.textContent = total.toFixed(2);
}

// Abrir modal ao clicar no carrinho
document.getElementById('cart-button')?.addEventListener('click', () => {
  renderCartModal();
  document.getElementById('cart-modal')?.classList.remove('hidden');
});

// Fechar modal
document.getElementById('close-cart-modal')?.addEventListener('click', () => {
  document.getElementById('cart-modal')?.classList.add('hidden');
});

// Fechar modal clicando fora
document.getElementById('cart-modal')?.addEventListener('click', (e) => {
  if (e.target.id === 'cart-modal') {
    document.getElementById('cart-modal')?.classList.add('hidden');
  }
});
function changeQty(id, delta) {
  let cart = loadCart();
  let item = cart.find(p => p.id === id);
  if (!item) return;

  // Se for diminuir e qty === 1, pedir confirma√ß√£o antes de remover
  if (delta === -1 && item.qty === 1) {
    requestRemove(id);
    return;
  }

  item.qty += delta;
  if (item.qty <= 0) {
    cart = cart.filter(p => p.id !== id);
  }
  saveCart(cart);
  renderCart();
  renderCartModal();
  updateFloatingCart();
}
